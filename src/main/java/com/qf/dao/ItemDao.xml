<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qf.dao.ItemDao">

    <!--Integer findByNameLike(@Param("name")String name);-->
    <select id="findCountByNameLike" resultType="integer">

        select count(1) from item
        <where>
            <if test="name != null and name != ''">

                name like '%'||#{name}||'%'

            </if>
        </where>
 </select>



    <!--List<Item> showByName(@Param("name")String name,-->
    <!--@Param("offset")Integer offset,-->
    <!--@Param("size")Integer size);-->
    <select id="showByName" resultType="Item">

        select * from
        (select a.*,rownum rn from
        (select * from item
        <where>
            <if test="name != null and name != ''">
                name like '%'||#{name}||'%'
            </if>
        </where>
        order by created desc) a
        where rownum &lt; (#{offset}+#{size}))
        where rn >= #{offset}

    </select>




    <!--Integer save(Item item);-->
    <insert id="save" parameterType="Item">

        insert into
          item
          (name,price,production_date,description,pic)
          values
          (#{name},#{price},#{productionDate},#{description},#{pic})


    </insert>




    <!--Integer deleteById(@Param("id")Integer id);-->
    <delete id="deleteById">

        delete from item where id = #{id}


    </delete>


    <!--Item findById(@Param("id")Integer id);-->
    <select id="findById" resultType="Item">

        select * from item where id = #{id}

    </select>




    <!--Integer updateById(Item item);-->
    <update id="updateById" parameterType="Item">

        update
          item
    <set>
          <if test="name != null and name != ''">
            name =#{name},
          </if>
          <if test="price != null">
            price =#{price},
          </if>
        <if test="productionDate != null">
            production_date =#{productionDate},
        </if>
        <if test="description != null and description != ''">
            description =#{description},
        </if>
        <if test="pic != null and pic != ''">
            pic = #{pic}
        </if>

    </set>
        where
            id = #{id}

    </update>

</mapper>